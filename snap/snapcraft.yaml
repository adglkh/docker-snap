name: docker
version: 17.09.1-ce
summary: Docker Linux container runtime
description: Docker complements kernel namespacing with a high-level API which operates at the process level. It runs unix processes with strong guarantees of isolation and repeatability across servers.

confinement: strict
grade: stable

plugs:
  support:
    interface: docker-support
  privileged:
    interface: docker-support
    privileged-containers: true
  docker-cli:
    interface: docker
slots:
  docker-daemon:
    interface: docker
  docker-executables:
    content: docker-executables
    interface: content
    read:
      - .

apps:
  docker:
    command: docker-wrapper docker
    plugs:
      - docker-cli
      - network
      - home

  dockerd:
    command: dockerd-wrapper
    daemon: simple
    plugs:
      - network-bind
      - firewall-control
      - support
      - privileged
      - home
    slots:
      - docker-daemon

  # TODO determine if we can "provide" a "docker-compose" in PATH directly (since this'll show up as "docker.compose" in the user PATH)
  compose:
    command: docker-wrapper docker-compose
    plugs:
      - docker-cli
      - network
      - home
  machine:
    command: docker-wrapper docker-machine
    plugs:
      - docker-cli
      - network
      - home
      - network-bind
  help:
    command: help

parts:
  snappy-bins:
    plugin: shell
    shell: bash
    shell-flags: ['-ex']
    shell-command: |
      install -d "$SNAPCRAFT_PART_INSTALL/bin"
      install -t "$SNAPCRAFT_PART_INSTALL/bin" "$SNAPDIR"/bin/*
    stage-packages:
      - mount

  go:
    plugin: gobuild
    source: https://storage.googleapis.com/golang/go1.8.3.src.tar.gz
    source-type: tar
    snap:
      - -*
    build-packages:
      - golang-go
      - rsync
      - netbase
      - python3-pyelftools

  docker:
    plugin: shell
    source: https://github.com/docker/docker-ce/archive/v17.09.1-ce.tar.gz
    source-type: tar
    shell: bash
    shell-flags: ['-eux', '-o', 'pipefail']
    shell-command: |
      export GOROOT="$SNAPDIR/parts/go/install"
      export PATH="$GOROOT/bin:$PATH"
      export VERSION=$(cat VERSION)
      export DOCKER_GITCOMMIT=$(git rev-parse --short HEAD)
      export GITCOMMIT=$DOCKER_GITCOMMIT
      go version

      source "$SNAPDIR/prep-docker-build.sh"
      pushd ./components/engine
      ./hack/make.sh dynbinary
      popd
      ls -l ./components/engine/bundles/latest/*/

      mkdir -p .gopath/src/github.com/docker
      export GOPATH="$PWD/.gopath"
      unset LDFLAGS
      ln -s "$PWD/components/cli" .gopath/src/github.com/docker/cli
      make -C .gopath/src/github.com/docker/cli dynbinary

      clientBin='.gopath/src/github.com/docker/cli/build/docker'
      daemonBin='components/engine/bundles/latest/dynbinary-daemon/dockerd'
      "$clientBin" -v
      "$daemonBin" -v
      install -d "$SNAPCRAFT_PART_INSTALL/bin"
      install -T "$(readlink -f "$clientBin")" "$SNAPCRAFT_PART_INSTALL/bin/docker"
      install -T "$(readlink -f "$daemonBin")" "$SNAPCRAFT_PART_INSTALL/bin/dockerd"
    after:
      - go
    build-packages:
      - btrfs-tools
      - gcc
      - libc6-dev
      - libdevmapper-dev
      - libltdl-dev
      - patch
      - git
      - pkg-config
    stage-packages:
      - aufs-tools

  containerd:
    plugin: shell
    # from  https://github.com/docker/docker-ce/blob/v17.09.1-ce/components/engine/hack/dockerfile/binaries-commits
    source: https://github.com/containerd/containerd/archive/06b9cb35161009dcb7123345749fef02f7cea8e0.tar.gz
    source-type: tar
    shell: bash
    shell-flags: ['-ex']
    shell-command: |
      export GOROOT="$SNAPDIR/parts/go/install"
      export PATH="$GOROOT/bin:$PATH"

      mkdir -p .gopath/src/github.com/containerd
      ln -sfT "$PWD" .gopath/src/github.com/containerd/containerd
      export GOPATH="$PWD/.gopath"

      pushd .gopath/src/github.com/containerd/containerd
      make GIT_COMMIT= GIT_BRANCH= LDFLAGS=
      popd

      install -d "$SNAPCRAFT_PART_INSTALL/bin"
      install -T bin/containerd "$SNAPCRAFT_PART_INSTALL/bin/docker-containerd"
      install -T bin/containerd-shim "$SNAPCRAFT_PART_INSTALL/bin/docker-containerd-shim"
      install -T bin/ctr "$SNAPCRAFT_PART_INSTALL/bin/docker-containerd-ctr"
    after:
      - go
    build-packages:
      - make

  runc:
    plugin: shell
    # from  https://github.com/docker/docker-ce/blob/v17.09.1-ce/components/engine/hack/dockerfile/binaries-commits
    source: https://github.com/opencontainers/runc/archive/3f2f8b84a77f73d38244dd690525642a72156c64.tar.gz
    source-type: tar
    shell: bash
    shell-flags: ['-ex']
    shell-command: |
      export GOROOT="$SNAPDIR/parts/go/install"
      export PATH="$GOROOT/bin:$PATH"
      go version

      mkdir -p .gopath/src/github.com/opencontainers
      ln -sfT "$PWD" .gopath/src/github.com/opencontainers/runc
      export GOPATH="$PWD/.gopath"
      pushd .gopath/src/github.com/opencontainers/runc
      make BUILDTAGS='seccomp apparmor selinux' COMMIT=
      popd

      install -d "$SNAPCRAFT_PART_INSTALL/bin"
      install -T runc "$SNAPCRAFT_PART_INSTALL/bin/docker-runc"
    after:
      - go
    build-packages:
      - libapparmor-dev
      - libseccomp-dev
      - make

  libnetwork:
    plugin: shell
    # from  https://github.com/docker/docker-ce/blob/v17.09.1-ce/components/engine/hack/dockerfile/binaries-commits
    source: https://github.com/docker/libnetwork/archive/7b2b1feb1de4817d522cc372af149ff48d25028e.tar.gz
    source-type: tar
    shell: bash
    shell-flags: ['-ex']
    shell-command: |
      export GOROOT="$SNAPDIR/parts/go/install"
      export PATH="$GOROOT/bin:$PATH"

      mkdir -p .gopath/src/github.com/docker
      ln -sfT "$PWD" .gopath/src/github.com/docker/libnetwork
      export GOPATH="$PWD/.gopath"

      pushd .gopath/src/github.com/docker/libnetwork
      make build-local
      popd

      install -d "$SNAPCRAFT_PART_INSTALL/bin"
      install -T bin/docker-proxy "$SNAPCRAFT_PART_INSTALL/bin/docker-proxy"
      install -T bin/dnet "$SNAPCRAFT_PART_INSTALL/bin/dnet"
    after:
      - go
    build-packages:
      - iptables
      - make

  tini:
    plugin: cmake
    source: https://github.com/krallin/tini.git
    source-type: git
    # from  https://github.com/docker/docker-ce/blob/v17.09.1-ce/components/engine/hack/dockerfile/binaries-commits
    source-commit: 949e6facb77383876aeff8a6944dde66b3089574
    organize:
      'bin/tini-static': bin/docker-init
    prime:
      - -bin/tini

  compose:
    plugin: python
    python-version: python2
    source: https://github.com/docker/compose/archive/1.17.1.tar.gz
    source-type: tar

  machine:
    plugin: shell
    source: https://github.com/docker/machine/archive/v0.13.0.tar.gz
    source-type: tar
    shell: bash
    shell-flags: ['-eux', '-o', 'pipefail']
    shell-command: |
      export GOROOT="$SNAPDIR/parts/go/install"
      export PATH="$GOROOT/bin:$PATH"
      go version

      mkdir -p .gopath/src/github.com/docker
      ln -sfT "$PWD" .gopath/src/github.com/docker/machine
      export GOPATH="$PWD/.gopath"

      pushd .gopath/src/github.com/docker/machine
      make build
      popd

      install -d "$SNAPCRAFT_PART_INSTALL/bin"
      install -T bin/docker-machine "$SNAPCRAFT_PART_INSTALL/bin/docker-machine"
    after:
      - go

# vim:set et ts=2 sw=2:
